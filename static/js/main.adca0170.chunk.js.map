{"version":3,"sources":["components/Api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["BASE_URL","request","url","fetch","then","response","json","data","getTodos","a","TodoList","state","input","selectTodos","filterTodos","props","todos","handleClick","todoUserId","selectUserId","selectedUser","filteredTodos","event","value","target","setState","filter","todo","title","includes","selectedTodos","select","completed","this","selectedUserId","selectUser","className","type","onChange","name","map","key","id","readOnly","userId","onClick","React","Component","CurrentUser","loadData","prevProps","alt","email","phone","clearUser","App","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adca0170.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function request(url) {\n  return fetch(url)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n\nexport const getTodos = async() => request(`${BASE_URL}/todos`);\n\nexport function getUsers(userId) {\n  return request(`${BASE_URL}/users/${userId}`);\n}\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    input: '',\n    selectTodos: '',\n    filterTodos: this.props.todos,\n  }\n\n  handleClick = (todoUserId, selectUserId, selectedUser) => {\n    if (todoUserId === selectUserId) {\n      selectedUser(0);\n    } else {\n      selectedUser(todoUserId);\n    }\n  };\n\n  filteredTodos = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      input: value,\n      filterTodos: this.props.todos.filter(todo => todo.title.includes(value)),\n    });\n  }\n\n  selectedTodos = (select) => {\n    switch (select) {\n      case 'Active':\n        this.setState({\n          filterTodos: this.props.todos.filter(todo => !todo.completed),\n        });\n        break;\n      case 'Completed':\n        this.setState({\n          filterTodos: this.props.todos.filter(todo => todo.completed),\n        });\n        break;\n      default:\n      case 'All':\n        this.setState({\n          filterTodos: this.props.todos,\n        });\n    }\n  }\n\n  render() {\n    const { filterTodos } = this.state;\n    const { selectedUserId, selectUser } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={this.state.input}\n            onChange={this.filteredTodos}\n          />\n          <select\n            name=\"select\"\n            value={this.state.selectTodos}\n            onChange={(event) => {\n              this.setState({ selectTodos: (event.target.value) });\n              this.selectedTodos(event.target.value);\n            }}\n          >\n            <option value=\"All\">All</option>\n            <option value=\"Active\">Active</option>\n            <option value=\"Completed\">Completed</option>\n          </select>\n\n          <ul className=\"TodoList__list\">\n            {filterTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={`TodoList__item TodoList__item${todo.completed\n                  ? '--checked'\n                  : '--unchecked'}`}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={\n                    `TodoList__user-button\n                    TodoList__user-button${todo.userId === selectedUserId\n                      ? '--selected'\n                      : ''}\n                    button`}\n                  type=\"button\"\n                  onClick={() => (\n                    this.handleClick(todo.userId, selectedUserId, selectUser)\n                  )}\n                >\n                  User&nbsp;\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    userId: PropTypes.number,\n    completed: PropTypes.bool,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUsers } from '../Api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: null,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const selectedUser = await getUsers(this.props.userId);\n\n    this.setState({ selectedUser });\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n\n    if (selectedUser === null) {\n      return (\n        <img\n          alt=\"loader\"\n        />\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {selectedUser.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n        <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n        <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n\n        <button\n          type=\"submit\"\n          onClick={this.props.clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos } from './components/Api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos: todos.filter(todo => todo.title),\n    });\n  }\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length > 0 && (\n            <TodoList\n              todos={todos}\n              selectUser={this.selectUser}\n              selectedUserId={selectedUserId}\n            />\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}